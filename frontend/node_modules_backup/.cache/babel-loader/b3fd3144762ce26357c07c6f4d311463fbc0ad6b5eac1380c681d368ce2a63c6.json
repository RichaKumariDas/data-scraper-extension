{"ast":null,"code":"// src/components/Advice.js\nimport React,{useState}from\"react\";import{fetchAdvice}from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Advice=()=>{const[advice,setAdvice]=useState(\"\");const getAdvice=async()=>{const newAdvice=await fetchAdvice();setAdvice(newAdvice);};return/*#__PURE__*/_jsxs(\"div\",{className:\"advice-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Random Advice\"}),/*#__PURE__*/_jsx(\"button\",{onClick:getAdvice,children:\"Get Advice\"}),/*#__PURE__*/_jsx(\"p\",{children:advice})]});};export default Advice;","map":{"version":3,"names":["React","useState","fetchAdvice","jsx","_jsx","jsxs","_jsxs","Advice","advice","setAdvice","getAdvice","newAdvice","className","children","onClick"],"sources":["C:/Users/coold/OneDrive/Documents/VSCODE/data-scraper-extension/frontend/src/components/Advice.js"],"sourcesContent":["// src/components/Advice.js\r\nimport React, { useState } from \"react\";\r\nimport { fetchAdvice } from \"../api\";\r\n\r\nconst Advice = () => {\r\n  const [advice, setAdvice] = useState(\"\");\r\n\r\n  const getAdvice = async () => {\r\n    const newAdvice = await fetchAdvice();\r\n    setAdvice(newAdvice);\r\n  };\r\n\r\n  return (\r\n    <div className=\"advice-box\">\r\n      <h2>Random Advice</h2>\r\n      <button onClick={getAdvice}>Get Advice</button>\r\n      <p>{advice}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Advice;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAS,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,WAAW,CAAC,CAAC,CACrCO,SAAS,CAACE,SAAS,CAAC,CACtB,CAAC,CAED,mBACEL,KAAA,QAAKM,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBT,IAAA,OAAAS,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBT,IAAA,WAAQU,OAAO,CAAEJ,SAAU,CAAAG,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC/CT,IAAA,MAAAS,QAAA,CAAIL,MAAM,CAAI,CAAC,EACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}